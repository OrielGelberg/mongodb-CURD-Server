apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-db-deployment
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/instance: mongo-db
    app.kubernetes.io/part-of: mongo-loader-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: mongo-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/instance: mongo-db
        app.kubernetes.io/part-of: mongo-loader-app
    spec:
      containers:
        - name: mongo
          image: docker.io/library/mongo:8.0
          ports:
            - containerPort: 27017
          envFrom:
            - configMapRef:
                name: mongo-db-config
            - secretRef:
                name: mongo-db-credentials
          readinessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-db-pvc